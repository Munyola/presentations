2013 version:

This talk will be a general "state of the project address" for
matplotlib, the popular plotting library in the scientific Python
stack. It will provide an update about new features added to
matplotlib over the course of the last year, outline some ongoing
planned work, and describe some challenges to move into the
future. The new features include a web browser backend, "sketch"
style, and numerous other bugfixes and improvements. Also discussed
will be the challenges and lessons learned moving to Python 3. Our new
"MEP" (matplotlib enhancement proposal) method will be introduced, and
the ongoing MEPs will be discussed, such as moving to properties,
updating the docstrings, etc. Some of the more pie-in-the-sky plans
(such as styling and serializing) will be discussed. It is hoped that
this overview will be useful for those who use matplotlib, but don't
necessarily follow its mailing list in detail, and also serve as a
call to arms for assistance for the project.

2015 version:

A 'state of the project address' for matplotlib (following on the 2013
talk with the same theme), the popular plotting library in the scientific
stack.  This talk will provide a brief tour of the new features in
the 1.4 series (including an interactive backend for IPython notebooks
and full python 3 support), a summary of the features in the pipeline
for 2.1 (including a completely over-hauled tool bar, greatly
improved interactive OO usage, and a serialization framework), and the
new default color map which triggered the 2.0 release.  The talk will
close with a discussion of the future of matplotlib and our role in
the community.  The scope of matplotlib usage has expanded well beyond
the domain expertise of the core developers and high-level
plotting tools are beyond what we can support.  To that end we propose
the creation of mpltool kits following the lead of scipy and present
a set of conventions to roughly unify all of user APIs.
